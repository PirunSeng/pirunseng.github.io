<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Rails | Pirun Seng]]></title>
  <link href="http://pirunseng.github.io/blog/categories/rails/atom.xml" rel="self"/>
  <link href="http://pirunseng.github.io/"/>
  <updated>2018-09-04T11:58:12+07:00</updated>
  <id>http://pirunseng.github.io/</id>
  <author>
    <name><![CDATA[Pirun Seng]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Common Mistakes We Might Make in Rails Development]]></title>
    <link href="http://pirunseng.github.io/blog/2018/08/12/common-mistakes-we-might-make-in-rails-development/"/>
    <updated>2018-08-12T17:21:54+07:00</updated>
    <id>http://pirunseng.github.io/blog/2018/08/12/common-mistakes-we-might-make-in-rails-development</id>
    <content type="html"><![CDATA[<h2>1 - Irreversible Migration</h2>

<p><strong>Rails 3</strong> has introduced <code>change</code> method which help reduces lines of migration code from two method <code>up</code> and <code>down</code> to just one which is <code>change</code> method. For example, we want to change default value of <code>nil</code> to an empty string <code>''</code>.</p>

<pre><code>def change
  change_column_default :articles, :owner, ''
end
</code></pre>

<p>There is no problem when we run <code>rake db:migrate</code>. Yet, we don&rsquo;t realize that we have made a mistake until we rollback the migration at some point. Then there will be an exception of <code>ActiveRecord::IrreversibleMigration</code>.</p>

<p>To get rid of the <code>ActiveRecord::IrreversibleMigration</code> exception, we have to rewrite both <code>up</code> and <code>down</code> methods again.</p>

<pre><code>def up
  change_column_default :articles, :owner, ''
end

def down
  change_column_default :articles, :owner, nil
end
</code></pre>

<p>Heh! If you&rsquo;re using <strong>Rails 5</strong>, there is a better way that help improve this case by adding <code>from</code> (old default value or nil) and <code>to</code> (new default value) options.</p>

<pre><code>def change
  change_column_default :articles, :owner, from: nil, to: ''
end
</code></pre>

<p>By specifying the <code>from</code> and <code>to</code> options, we can freely run our migrations up and down without getting any of <code>ActiveRecord::IrreversibleMigration</code> exceptions anymore.</p>

<h2>2 - Accidentally Deleted Object(s)</h2>

<p>To be continued&hellip;</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Active Record Finder Methods - Find or Find_by]]></title>
    <link href="http://pirunseng.github.io/blog/2017/11/06/active-record-finder-methods-find-or-find-by/"/>
    <updated>2017-11-06T21:11:24+07:00</updated>
    <id>http://pirunseng.github.io/blog/2017/11/06/active-record-finder-methods-find-or-find-by</id>
    <content type="html"><![CDATA[<p>There might be sometimes that we get an unexpected exception where we use ActiveRecord::FinderMethods <code>find</code> and <code>find_by</code>.</p>

<p>So we need to be sure whether to use <code>find</code> or <code>find_by</code> where we are finding active record.</p>

<p>The main difference between <code>find</code> and <code>find_by</code> is the answer to this question, <strong>what we want to return once the record is not found?</strong> We will want to use <code>find_by</code> when we want to return <strong><em>nil</em></strong> if no record is found while we use <code>find</code> to expect the exception, <strong><em>ActiveRecord::RecordNotFound</em></strong>, to be raised.</p>

<p>To discover more about Active Record Finder Methods, please refer to the <a href="http://api.rubyonrails.org/classes/ActiveRecord/FinderMethods.html">API document</a>.</p>

<p>Happy coding!</p>
]]></content>
  </entry>
  
</feed>
